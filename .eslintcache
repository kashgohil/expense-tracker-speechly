[{"D:\\Projects\\react-setup\\src\\index.js":"1","D:\\Projects\\react-setup\\src\\App.js":"2","D:\\Projects\\react-setup\\src\\reportWebVitals.js":"3","D:\\Projects\\react-setup\\src\\components\\details\\Details.jsx":"4","D:\\Projects\\react-setup\\src\\components\\main\\Main.jsx":"5","D:\\Projects\\react-setup\\src\\components\\main\\form\\Form.jsx":"6","D:\\Projects\\react-setup\\src\\components\\main\\form\\styles.js":"7","D:\\Projects\\react-setup\\src\\components\\main\\list\\List.jsx":"8","D:\\Projects\\react-setup\\src\\context\\context.js":"9","D:\\Projects\\react-setup\\src\\context\\contextReducer.js":"10","D:\\Projects\\react-setup\\src\\constants\\categories.js":"11","D:\\Projects\\react-setup\\src\\utils\\formatDate.js":"12","D:\\Projects\\react-setup\\src\\useTransactions.js":"13","D:\\Projects\\react-setup\\src\\components\\Icons\\index.js":"14"},{"size":727,"mtime":1609477302165,"results":"15","hashOfConfig":"16"},{"size":564,"mtime":1610312032247,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":500,"mtime":1610308944201,"results":"19","hashOfConfig":"16"},{"size":692,"mtime":1610315697078,"results":"20","hashOfConfig":"16"},{"size":4160,"mtime":1610311667691,"results":"21","hashOfConfig":"16"},{"size":245,"mtime":1609349677755,"results":"22","hashOfConfig":"16"},{"size":1328,"mtime":1610315922204,"results":"23","hashOfConfig":"16"},{"size":888,"mtime":1610047275296,"results":"24","hashOfConfig":"16"},{"size":531,"mtime":1610047529953,"results":"25","hashOfConfig":"16"},{"size":1691,"mtime":1609430223525,"results":"26","hashOfConfig":"16"},{"size":338,"mtime":1609430720121,"results":"27","hashOfConfig":"16"},{"size":1265,"mtime":1609473000455,"results":"28","hashOfConfig":"16"},{"size":2299,"mtime":1610096442541,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"xjcq8c",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\Projects\\react-setup\\src\\index.js",[],["60","61"],"D:\\Projects\\react-setup\\src\\App.js",[],"D:\\Projects\\react-setup\\src\\reportWebVitals.js",[],"D:\\Projects\\react-setup\\src\\components\\details\\Details.jsx",[],"D:\\Projects\\react-setup\\src\\components\\main\\Main.jsx",[],"D:\\Projects\\react-setup\\src\\components\\main\\form\\Form.jsx",["62","63","64","65","66","67","68","69","70","71"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n\tTextField,\r\n\tTypography,\r\n\tGrid,\r\n\tFormControl,\r\n\tButton,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { ExpenseTrackerContext } from 'context/context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { incomeCategories, expenseCategories } from 'constants/categories';\r\nimport formatDate from 'utils/formatDate';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\n\r\nconst initialState = {\r\n\tamount: '',\r\n\tcategory: '',\r\n\ttype: 'Income',\r\n\tdate: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n\tconst classes = useStyles();\r\n\tconst { addTransaction } = useContext(ExpenseTrackerContext);\r\n\tconst [formData, setFormData] = useState(initialState);\r\n\tconst { segment } = useSpeechContext();\r\n\r\n\tconst createTransaction = () => {\r\n\t\tif (Number.isNaN(formData.amount) || !formData.date.includes('-')) return;\r\n\t\tconst transaction = {\r\n\t\t\t...formData,\r\n\t\t\tamount: Number(formData.amount),\r\n\t\t\tid: uuidv4(),\r\n\t\t};\r\n\t\taddTransaction(transaction);\r\n\t\tsetFormData(initialState);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (segment) {\r\n\t\t\tif (segment.intent.intent === 'add_expense') {\r\n\t\t\t\tsetFormData({ ...formData, type: 'Expense' });\r\n\t\t\t} else if (segment.intent.intent === 'add_income') {\r\n\t\t\t\tsetFormData({ ...formData, type: 'Income' });\r\n\t\t\t} else if (\r\n\t\t\t\tsegment.isFinal &&\r\n\t\t\t\tsegment.intent.intent === 'create_transaction'\r\n\t\t\t) {\r\n\t\t\t\treturn createTransaction();\r\n\t\t\t} else if (\r\n\t\t\t\tsegment.isFinal &&\r\n\t\t\t\tsegment.intent.intent === 'cancel_transaction'\r\n\t\t\t) {\r\n\t\t\t\treturn setFormData(initialState);\r\n\t\t\t}\r\n\r\n\t\t\tsegment.entities.forEach((e) => {\r\n\t\t\t\tconst category = `${e.value.charAt(0)}${e.value\r\n\t\t\t\t\t.slice(1)\r\n\t\t\t\t\t.toLowerCase()}`;\r\n\r\n\t\t\t\tswitch (e.type) {\r\n\t\t\t\t\tcase 'amount':\r\n\t\t\t\t\t\tsetFormData({ ...formData, amount: e.value });\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'category':\r\n\t\t\t\t\t\tif (incomeCategories.map((ic) => ic.type).includes(category)) {\r\n\t\t\t\t\t\t\tsetFormData({ ...formData, type: 'Income', category });\r\n\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\texpenseCategories.map((ic) => ic.type).includes(category)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tsetFormData({ ...formData, type: 'Expense', category });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\tsetFormData({ ...formData, date: e.value });\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (\r\n\t\t\t\tsegment.isFinal &&\r\n\t\t\t\tformData.amount &&\r\n\t\t\t\tformData.type &&\r\n\t\t\t\tformData.category &&\r\n\t\t\t\tformData.date\r\n\t\t\t)\r\n\t\t\t\tcreateTransaction();\r\n\t\t}\r\n\t}, [segment]);\r\n\r\n\tconst selectedCategories =\r\n\t\tformData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n\treturn (\r\n\t\t<section className='form'>\r\n\t\t\t<span className='spoken-text'>\r\n\t\t\t\t{segment && segment.words.map((word) => word.value).join(' ')}\r\n\t\t\t</span>\r\n\t\t\t<span className='form-attribute'>\r\n\t\t\t\t<span className='label'>Type</span>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={formData.type}\r\n\t\t\t\t\tonChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value='Income'>Income</option>\r\n\t\t\t\t\t<option value='Expense'>Expense</option>\r\n\t\t\t\t</select>\r\n\t\t\t</span>\r\n\t\t\t<span className='form-attribute'>\r\n\t\t\t\t<span className='label'>Category</span>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={formData.category}\r\n\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\tsetFormData({ ...formData, category: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{selectedCategories.map((category) => (\r\n\t\t\t\t\t\t<option key={category.type} value={category.type}>\r\n\t\t\t\t\t\t\t{category.type}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</span>\r\n\r\n\t\t\t<span className='form-attribute'>\r\n\t\t\t\t<span className='label'>Amount</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tvalue={formData.amount}\r\n\t\t\t\t\tonChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t\t<span className='form-attribute'>\r\n\t\t\t\t<span className='label'>date</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='date'\r\n\t\t\t\t\tvalue={formData.amount}\r\n\t\t\t\t\tonChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\r\n\t\t\t<button className='form-button' onClick={createTransaction}>\r\n\t\t\t\tCreate\r\n\t\t\t</button>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","D:\\Projects\\react-setup\\src\\components\\main\\form\\styles.js",[],"D:\\Projects\\react-setup\\src\\components\\main\\list\\List.jsx",[],"D:\\Projects\\react-setup\\src\\context\\context.js",[],"D:\\Projects\\react-setup\\src\\context\\contextReducer.js",[],"D:\\Projects\\react-setup\\src\\constants\\categories.js",[],"D:\\Projects\\react-setup\\src\\utils\\formatDate.js",[],"D:\\Projects\\react-setup\\src\\useTransactions.js",[],"D:\\Projects\\react-setup\\src\\components\\Icons\\index.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":2,"nodeType":"78","messageId":"79","endLine":3,"endColumn":11},{"ruleId":"76","severity":1,"message":"80","line":4,"column":2,"nodeType":"78","messageId":"79","endLine":4,"endColumn":12},{"ruleId":"76","severity":1,"message":"81","line":5,"column":2,"nodeType":"78","messageId":"79","endLine":5,"endColumn":6},{"ruleId":"76","severity":1,"message":"82","line":6,"column":2,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":7,"column":2,"nodeType":"78","messageId":"79","endLine":7,"endColumn":8},{"ruleId":"76","severity":1,"message":"84","line":8,"column":2,"nodeType":"78","messageId":"79","endLine":8,"endColumn":12},{"ruleId":"76","severity":1,"message":"85","line":9,"column":2,"nodeType":"78","messageId":"79","endLine":9,"endColumn":8},{"ruleId":"76","severity":1,"message":"86","line":10,"column":2,"nodeType":"78","messageId":"79","endLine":10,"endColumn":10},{"ruleId":"76","severity":1,"message":"87","line":27,"column":8,"nodeType":"78","messageId":"79","endLine":27,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":96,"column":5,"nodeType":"90","endLine":96,"endColumn":14,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Grid' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"97","text":"98"},[2541,2550],"[createTransaction, formData, segment]"]